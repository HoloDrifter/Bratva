<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Bratva Family</title>
    <link
      href="https://cdn.jsdelivr.net/npm/remixicon@4.5.0/fonts/remixicon.css"
      rel="stylesheet"
    />
    <link rel="stylesheet" href="/styles/generalStyles.css" />
    <link rel="stylesheet" href="/styles/dashboard.css" />
  </head>
  <body>
    <header>
      <%- include('partials/nav', { user: user }) %>

      <div class="page_detials container">
        <p>Bratva Family</p>
        <h2>All Products</h2>
      </div>
    </header>

    <!-- Main dashboard -->
    <main class="container dashboard-wrapper">
      <div id="errorMessageFloat" class="width-100">
        <p class="error"></p>
        <span><i class="ri-close-line"></i></span>
      </div>
      <div class="product-dashboard_bottom container box-bg">
        <div class="product-dashboard_top">
          <div class="box-bg user-product-box">
            <h4 class="heading-4">
              Total des produits <br />
              <span class="box-count"> <%= products.length %> </span>
            </h4>
          </div>
          <!-- <div class="box-bg">
              <h4 class="heading-4">Will show valid customers</h4>
            </div> -->
        </div>
        <div class="products_wrapper">
          <div class="products_top">
            <p>S. No:</p>
            <p>PAYS</p>
            <p>DESCRIPTION D'ACTIVITE</p>
            <p>FORME JURIDIQUE</p>
            <p>DATE D'IMMATRICULATION</p>
            <p>CODE APE</p>
            <p>CAPITAL SOCIAL</p>
            <p>BANQUE</p>
          </div>
          <div class="product_boxes">
            <% for(let [index, product] of products.entries()) { %>
            <div class="product-box">
              <p><%= (page - 1) * limit + (index + 1) %></p>
              <!-- Adjusting the serial number based on the page -->
              <h4><%= product.name %></h4>
              <p><%= product.description %></p>
              <p><%= product.type %></p>
              <p>
                <%= new Date(product.dateImmatriculation).toLocaleDateString('en-GB') %>
              </p>
              <p><%= product.apeCode %></p>
              <p><%= product.socialCapital %>€</p>
              <div class="banks_btns">
            <% for(let bank of product.banks) { %>
              <button class="btn btn-bg bank_btn <%= bank.purchased ? 'disabled-bank' : '' %>">
                <%= bank.name %> <span><%= bank.price %>€</span>
              </button>
              
              
              
              <% } %>
              </div>
              
              <button
                class="btn btn-green buy-btn"
                data-productId="<%= product._id %>"
              >
                <i class="ri-shopping-bag-line"></i> Acheter
              </button>
              
            </div>
            <% } %>
          </div>

          <!-- Pagination Controls -->
          <div class="pagination-controls">
            <% if (page > 1) { %>
            <a
              href="/products?page=<%= page - 1 %>&limit=<%= limit %>"
              class="btn-prev"
              >Previous</a
            >
            <% } %> <% for (let i = 1; i <= totalPages; i++) { %>
            <a
              href="/products?page=<%= i %>&limit=<%= limit %>"
              class="btn-page <%= i === page ? 'active' : '' %>"
            >
              <%= i %>
            </a>
            <% } %> <% if (page < totalPages) { %>
            <a
              href="/products?page=<%= page + 1 %>&limit=<%= limit %>"
              class="btn-next"
              >Next</a
            >
            <% } %>
          </div>
        </div>
      </div>
    </main>

    <section class="show-product-confirm-model">
      <div class="show-product-model-content">
        <div id="closeModal"><i class="ri-close-large-line"></i></div>
        <!-- order summary -->
        <div class="orderSummary-head">
          <h3 class="heading-4">
            <i class="ri-shopping-cart-2-line"></i>
            Order Summary
          </h3>
        </div>

        <div class="orderSummary-body">
          <div class="orderSummary-box">
            <h4>PAYS</h4>
            <p class="productName"></p>
          </div>
          <div class="orderSummary-box">
            <h4>DESCRIPTION D'ACTIVITE</h4>
            <p class="productDescription"></p>
          </div>
          <div class="orderSummary-box">
            <h4>FORME JURIDIQUE</h4>
            <p class="productType"></p>
          </div>
          <div class="orderSummary-box">
            <h4>DATE D'IMMATRICULATION</h4>
            <p class="productRegistrationDate"></p>
          </div>
          <div class="orderSummary-box">
            <h4>CODE APE</h4>
            <p class="productCodeApe"></p>
          </div>
          <div class="orderSummary-box">
            <h4>CAPITAL SOCIAL</h4>
            <p class="productCapitalSocial"></p>
          </div>
          <div class="orderSummary-box">
            <h4>Select BANQUE</h4>
            <div class="banks_wrapper">
              <!-- bank code here -->
            </div>
          </div>

     
        </div>
        <div class="orderSummary-footer box-bg">
          <div class="orderSummary-box">
            <h4>Your Balance</h4>
            <p class="userBalance"><%= user.balance%></p>
          </div>
          <div class="orderSummary-box">
            <h4>Total</h4>
            <p class="productPrice productTotal"></p>
          </div>

          <button id="confirmBuyBtn" class="btn btn-green" data-productId="">
            Pay Now <span class="productPrice"></span>
          </button>
        </div>
      </div>
  
    </section>
    <!-- footer -->
    <%- include('partials/footer') %>

    <!--End  footer -->

    <script>
      const closeModalButton = document.getElementById("closeModal");
      const confirmBuyBtn = document.getElementById("confirmBuyBtn");

      closeModalButton.addEventListener("click", () => {
        document.querySelector(".show-product-confirm-model").style.display =
          "none";
      });

    // Calling Order create Api
    const showProductConfirmModel = async (btn) => {
  try {
    const productId = btn.getAttribute("data-productid");
    console.log(productId);
    
    const response = await fetch("/products/productById", {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
      },
      body: JSON.stringify({ productId: productId }),
    });

    const data = await response.json();

    if (!data.success) {
      messageDisplay(data.message, "red");
      return;
    }

    const { name, description, type, apeCode, socialCapital, banks, dateImmatriculation } = data.product;

    // Set modal values
    confirmBuyBtn.setAttribute("data-productId", productId);
    document.querySelector(".productName").textContent = name;
    document.querySelector(".productDescription").textContent = description;
    document.querySelector('.productRegistrationDate').textContent = new Date(dateImmatriculation).toLocaleDateString('en-GB');
    document.querySelector(".productType").textContent = type;
    document.querySelector(".productCodeApe").textContent = apeCode;
    document.querySelector(".productCapitalSocial").textContent = socialCapital + "€";

    // Reset total price initially
    document.querySelector(".productTotal").textContent = "0€";
    document.querySelector("#confirmBuyBtn").innerHTML = `Pay Now 0€`;

    // Populate banks as checkboxes
    const banksWrapper = document.querySelector(".banks_wrapper");
    banksWrapper.innerHTML = ""; // Clear previous content

    banks.forEach((bank, index) => {
      const bankElement = document.createElement("div");
      bankElement.classList.add("bank-option");

      // ✅ Disable if already purchased
      const isPurchased = bank.purchased;
      bankElement.innerHTML = `
        <input type="checkbox" id="bank-${index}" name="selectedBanks" value="${bank._id}" data-price="${bank.price}" ${isPurchased ? "disabled" : ""}>
        <label for="bank-${index}" ${isPurchased ? 'style="color: gray; text-decoration: line-through;"' : ""}>
          ${bank.name} - ${bank.price}€
          ${isPurchased ? "(Already Purchased)" : ""}
        </label>
      `;

      banksWrapper.appendChild(bankElement);
    });

    // Update total price when selecting banks
    const checkboxes = document.querySelectorAll('input[name="selectedBanks"]');
    checkboxes.forEach((checkbox) => {
      checkbox.addEventListener("change", updateTotalPrice);
    });

    // Show the modal
    const showProductConfirmModel = document.querySelector(".show-product-confirm-model");
    showProductConfirmModel.style.display = "flex";

  } catch (error) {
    alert("Error Fetching Product details");
  }
};

const updateTotalPrice = () => {
  let total = 0;
  document
    .querySelectorAll('input[name="selectedBanks"]:checked')
    .forEach((checkbox) => {
      total += parseFloat(checkbox.getAttribute("data-price"));
    });

  // ✅ Ensure it doesn't show "undefined" if no banks are selected
  document.querySelector(".productTotal").textContent = total > 0 ? total + "€" : "0€";
  document.querySelector("#confirmBuyBtn").innerHTML = `Pay Now ${total > 0 ? total + "€" : "0€"}`;
};



      const purchaseBtn = document.querySelectorAll(".buy-btn");
      purchaseBtn.forEach((btn) => {
        btn.addEventListener("click", () => {
          showProductConfirmModel(btn);
        });
      });

      confirmBuyBtn.addEventListener("click", async () => {
  // Disable the button to prevent multiple clicks
  confirmBuyBtn.disabled = true;
  confirmBuyBtn.innerText = "Processing..."; // Change button text

  try {
    const productId = confirmBuyBtn.getAttribute("data-productId");

    // Get selected banks
    const selectedBanks = Array.from(
      document.querySelectorAll('input[name="selectedBanks"]:checked')
    ).map((checkbox) => checkbox.value);

    if (selectedBanks.length === 0) {
      messageDisplay("Please select at least one bank before proceeding.", "red");
      confirmBuyBtn.disabled = false;
      confirmBuyBtn.innerHTML = ` Pay Now <span class="productPrice"></span>`;
      return;
    }

    // Send request to backend
    const response = await fetch(`/orders/create`, {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
      },
      body: JSON.stringify({
        productId,
        selectedBanks, // Send selected banks array
      }),
    });

    const data = await response.json();
    if (!data.success) {
      messageDisplay(data.message, "red");
      confirmBuyBtn.disabled = false;
      confirmBuyBtn.innerHTML = ` Pay Now <span class="productPrice"></span>`;
      return;
    } else {
      messageDisplay(data.message, "green");

      setTimeout(() => {
        window.location.href = data.redirectUrl;
      }, 2000);
    }
  } catch (error) {
    console.error("Error:", error);
    messageDisplay("An unexpected error occurred. Please try again.", "red");
  } finally {
    // Close modal and reset button state
    document.querySelector(".show-product-confirm-model").style.display = "none";
    setTimeout(() => {
      confirmBuyBtn.disabled = false;
      confirmBuyBtn.innerHTML = ` Pay Now <span class="productPrice"></span>`;
    }, 1500);
  }
});

    </script>
    <script src="/js/base.js"></script>
  </body>
</html>
