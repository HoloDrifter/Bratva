<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Bratva Family</title>
    <link
      href="https://cdn.jsdelivr.net/npm/remixicon@4.5.0/fonts/remixicon.css"
      rel="stylesheet"
    />
    <link rel="stylesheet" href="/styles/generalStyles.css" />
    <link rel="stylesheet" href="/styles/dashboard.css" />
  </head>
  <body>
    <header>
      <nav>
        <div class="container">
          <div class="nav_left">
            <a href="/admin/dashboard">
              <img src="/img/logo.png" alt="Bratva logo" width="120" />
            </a>
            <ul>
              <li>
                <a href="/admin/dashboard"
                  ><i class="ri-home-5-line"></i> Accueil</a
                >
              </li>
              <li>
                <a href="/admin/products"
                  ><i class="ri-government-line"></i> Produits</a
                >
              </li>
              <li>
                <a href="/admin/users"
                  ><i class="ri-shopping-cart-line"></i> View Order</a
                >
              </li>
              <li>
                <a href="/admin/addProduct">
                  <i class="ri-customer-service-2-line"></i> Create Product
                </a>
              </li>
            </ul>
          </div>

          <div class="nav_right">
            <ul>
              <li>
                <div class="profile_nav-card">
                  <img
                    src="/img/resource-database-26KGWLCbX7o-unsplash.jpg"
                    alt=""
                    width="30"
                  />
                  <div class="profile-details">
                    <p class="username"><%= user.username%></p>
                  </div>

                  <div class="profile_card-sub admin">
                    <ul>
                      <li>
                        <a href="/logout"
                          ><button>
                            <i class="ri-logout-box-r-line"></i> Déconnexion
                          </button></a
                        >
                      </li>
                    </ul>
                  </div>
                </div>
              </li>
            </ul>
          </div>
        </div>
      </nav>
      <div class="page_detials container">
        <p>Bratva Family</p>
        <h2>All Products</h2>
      </div>
    </header>

    <!-- View customers --- see orders,  -->
    <!-- cusotmer usermane, customer total orders --= when clicked on it can see all orders in detail -->
    <!-- View Products -- delete product , update product -->
    <!-- product -->
    <!--  -->
    <!-- Main dashboard -->
    <main class="container dashboard-wrapper">
      <div class="dashboard_top">
        <div class="dashboard_top-left">
          <div class="box-bg">
            <h4 class="heading-4">
              Total products <br />
              <%= products.length %>
            </h4>
          </div>
          <div class="box-bg">
            <h4 class="heading-4"></h4>
          </div>
        </div>
        <div class="box-bg admin-addProduct-box">
          Add new product
          <a href="/admin/addProduct">
            <button class="btn btn-black">Add new product</button>
          </a>
        </div>
      </div>

      <div class="product-dashboard_bottom container box-bg">
        <div class="products_wrapper">
          <div class="products_top">
            <p>S. No:</p>
            <p>Nom</p>
            <p>FORME</p>
            <p>Date de crea</p>
            <p>code naf</p>
            <p>Capital social</p>
            <p>stock</p>
            <p>prix</p>
          </div>
          <div class="product_boxes">
            <% for(let [index, product] of products.entries()) {%>
            <div class="product-box">
              <p><%= index + 1 %></p>
              <h4><%= product.name %></h4>
              <p><%= product.type %></p>
              <p>
                <%= new Date(product.createdAt).toLocaleDateString('en-GB') %>
              </p>
              <p><%= product.apeCode %></p>
              <p><%= product.socialCapital %>€</p>
              <p><%= product.stock %></p>
              <p><%= product.price %>€</p>
              <div class="admin-products-table-btns">
                <button
                  class="btn btn-outline edit-button"
                  data-id="<%= product._id %>"
                  data-name="<%= product.name %>"
                  data-type="<%= product.type %>"
                  data-apeCode="<%= product.apeCode %>"
                  data-socialCapital="<%= product.socialCapital %>"
                  data-stock="<%= product.stock %>"
                  data-price="<%= product.price %>"
                >
                  <i class="ri-edit-line"></i> Edit
                </button>

                <button
                  class="btn btn-danger delete-button"
                  data-id="<%= product._id %>"
                  data-name="<%= product.name %>"
                >
                  <i class="ri-delete-bin-line"></i> Delete
                </button>
              </div>
            </div>
            <%}%>
          </div>
        </div>
      </div>

      <section class="admin-product-delete">
        <!-- Modal -->
        <div id="deleteModal" class="modal" style="display: none">
          <div class="modal-content">
            <div class="modal-header">
              <h2>Confirm Deletion</h2>
              <span class="close" id="closeModal">&times</span>
            </div>
            <div class="modal-body">
              <p>
                Are you sure you want to delete
                <strong id="productName"></strong>?
              </p>
            </div>
            <div class="modal-footer">
              <button id="confirmDelete" class="btn btn-danger">
                Yes, Delete
              </button>
              <button id="cancelButton" class="btn btn-outline">No</button>
            </div>
          </div>
        </div>

        <!-- Edit Modal -->
        <div id="editModal" class="modal" style="display: none">
          <div class="modal-content">
            <div class="modal-header">
              <h2>Edit Product</h2>
              <span class="close" id="closeEditModal">&times;</span>
            </div>
            <div class="modal-body">
              <form id="addProductForm">
                <div class="form-box-container">
                  <div class="box">
                    <label for="editName">Nom</label>
                    <input
                      type="text"
                      name="name"
                      id="editName"
                      placeholder="eg.Finom"
                    />
                  </div>
                  <div class="box">
                    <label for="editType">Forme:</label>
                    <select id="editType" name="type">
                      <option value="SAS">SAS</option>
                      <option value="EI">EI</option>
                    </select>
                  </div>
                </div>
                <div class="form-box-container">
                  <div class="box">
                    <label for="editApeCode">code naf</label>
                    <input
                      type="text"
                      name="apeCode"
                      id="editApeCode"
                      placeholder="49.99Z"
                    />
                  </div>
                  <div class="box">
                    <label for="editSocialCapital">Capital social</label>
                    <input
                      type="number"
                      name="socialCapital"
                      id="editSocialCapital"
                      placeholder="4000"
                    />
                  </div>
                </div>
                <div class="form-box-container">
                  <div class="box">
                    <label for="editStock">stock</label>
                    <input
                      type="number"
                      name="stock"
                      id="editStock"
                      placeholder="20"
                    />
                  </div>
                  <div class="box">
                    <label for="editPrice">Prix</label>
                    <input
                      type="number"
                      name="price"
                      id="editPrice"
                      placeholder="2000"
                    />
                  </div>
                </div>
                <div class="btn-wrapper">
                  <button type="button" id="confirmEdit" class="btn btn-bg">
                    <i class="ri-edit-line"></i> <span>Edit</span>
                  </button>
                  <button type="button" id="cancelEdit" class="btn btn-outline">
                    <i class="ri-close-line"></i> <span>Cancel</span>
                  </button>
                </div>
              </form>
            </div>
          </div>
        </div>
      </section>
    </main>

    <script>
      document.addEventListener("DOMContentLoaded", () => {
        const profile_card = document.querySelector(".profile_nav-card");
        const profile_card_sub = document.querySelector(".profile_card-sub");

        profile_card.addEventListener("click", (e) => {
          e.stopPropagation();
          profile_card_sub.classList.toggle("active");
        });

        document.addEventListener("click", (e) => {
          if (
            !profile_card.contains(e.target) &&
            !profile_card_sub.contains(e.target)
          ) {
            profile_card_sub.classList.remove("active");
          }
        });

        // Confirm Delete Modal
        const deleteButtons = document.querySelectorAll(".delete-button");
        const deleteModal = document.getElementById("deleteModal");
        const productNameElement = document.getElementById("productName");
        const confirmDeleteButton = document.getElementById("confirmDelete");
        const closeModalButton = document.getElementById("closeModal");
        const cancelButton = document.getElementById("cancelButton");

        let selectedProductId = null;

        deleteButtons.forEach((button) => {
          button.addEventListener("click", () => {
            const productId = button.getAttribute("data-id"); // Get product ID
            const productName = button.getAttribute("data-name"); // Get product name

            productNameElement.textContent = productName;

            selectedProductId = productId;

            deleteModal.style.display = "flex";
          });
        });

        closeModalButton.addEventListener("click", () => {
          deleteModal.style.display = "none";
        });

        cancelButton.addEventListener("click", () => {
          deleteModal.style.display = "none";
        });

        // calling Product delete api

        confirmDeleteButton.addEventListener("click", () => {
          if (selectedProductId) {
            // Call your delete API
            fetch(`/products/api/deleteProduct/${selectedProductId}`, {
              method: "DELETE",
            })
              .then((response) => response.json())
              .then((data) => {
                if (data.success) {
                  location.reload();
                } else {
                  alert("Failed to delete the product.");
                }
              })
              .catch((error) => {
                console.error("Error deleting product:", error);
              });

            // Hide the modal
            deleteModal.style.display = "none";
          }
        });

        // Edit modal
        const editButtons = document.querySelectorAll(".edit-button"); 
        const editModal = document.getElementById("editModal"); 
        const closeEditModalButton = document.getElementById("closeEditModal"); 
        const cancelEditButton = document.getElementById("cancelEdit"); 
        const confirmEditButton = document.getElementById("confirmEdit"); 

        // Form fields
        const editName = document.getElementById("editName");
        const editType = document.getElementById("editType");
        const editApeCode = document.getElementById("editApeCode");
        const editSocialCapital = document.getElementById("editSocialCapital");
        const editStock = document.getElementById("editStock");
        const editPrice = document.getElementById("editPrice");

        let selectedProductId2 = null; 

        // Show the edit modal when an edit button is clicked
        editButtons.forEach((button) => {
          button.addEventListener("click", () => {
            selectedProductId2 = button.getAttribute("data-id"); // Get product ID
            editName.value = button.getAttribute("data-name"); // Populate form fields
            editType.value = button.getAttribute("data-type");
            editApeCode.value = button.getAttribute("data-apeCode");
            editSocialCapital.value = button.getAttribute("data-socialCapital");
            editStock.value = button.getAttribute("data-stock");
            editPrice.value = button.getAttribute("data-price");

            editModal.style.display = "flex"; // Show the modal
          });
        });

        // Close the modal when the close button is clicked
        closeEditModalButton.addEventListener("click", () => {
          editModal.style.display = "none";
        });

        // Close the modal when the cancel button is clicked
        cancelEditButton.addEventListener("click", () => {
          editModal.style.display = "none";
        });

        // Handle the form submission
        confirmEditButton.addEventListener("click", () => {
          if (selectedProductId2) {
            // Prepare updated product data
            const updatedProduct = {
              name: editName.value,
              type: editType.value,
              apeCode: editApeCode.value,
              socialCapital: editSocialCapital.value,
              stock: editStock.value,
              price: editPrice.value,
            };

            // Send the updated data to the API
            fetch(`/products/api/editProduct/${selectedProductId2}`, {
              method: "PUT",
              headers: {
                "Content-Type": "application/json",
              },
              body: JSON.stringify(updatedProduct),
            })
              .then((response) => response.json())
              .then((data) => {
                if (data.success) {
                  console.log(data.message)
                  // Reload the page or update the table row dynamically
                  location.reload();
                } else {
                  alert("Failed to update the product.");
                }
              })
              .catch((error) => {
                console.error("Error updating product:", error);
              });

            // Hide the modal
            editModal.style.display = "none";
          }
        });
      });
    </script>
  </body>
</html>
